eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"project/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'project\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'project\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=project/app.js");

;eval("define(\"project/components/maps-canvas\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    /*global google */\n    var mapsComponent = Ember.Component.extend({\n      id: \'maps-canvas\',\n     className : \'maps-canvas\',\n      tagName: \'div\',\n      layoutName : \'maps\',\n     templateName : \'maps\',\n     statename: \'\',\n      attributeBindings: [\'style\'],\n      style:\"position:relative;margin:5%; margin-top:100px; margin-bottom:-50px; height: 300px; border:1px solid red\",\n\n\n      map:null,\n\n\n      didInsertElement: function() {\n\n    	var mapOptions = {\n    		\n          center: new google.maps.LatLng(34.295383,-111.952880),\n          zoom: 4,\n          mapTypeId: \'roadmap\'\n        };\n        var map = new google.maps.Map(this.$().get(0),mapOptions);\n        var bounds = new google.maps.LatLngBounds();\n        var marker, i;\n        var markers = [\n            [\'Arizona\', 34.295383,-111.952880],\n            [\'Utah\', 39.159840, -111.777741],\n            [\'New York\', 40.705631, -74.014396],\n            [\'Chicago\', 41.871581, -87.621606],\n            [\'Seattle\',47.602812, -122.322796],\n            [\'Alaska\', 64.577288, -150.557246],\n            [\'Colorado\',39.253617, -105.468170],\n            [\'Washington\',38.903624, -77.036196],\n\n        ];\n\n        for( i = 0; i < markers.length; i++ ) {\n            var position = new google.maps.LatLng(markers[i][1], markers[i][2]);\n          // bounds.extend(position);\n            marker = new google.maps.Marker({\n                position: position,\n                map: map,\n                title: markers[i][0],\n              });\n         }\n        // map.fitbounds(bounds);\n        //this.set(\"map\",map);\n\n      }\n\n       \n    });\n\n\n    __exports__[\"default\"] = mapsComponent;\n  });//# sourceURL=project/components/maps-canvas.js");

;eval("define(\"project/controllers/places\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var placesController = Ember.ArrayController.extend({\n    init:function(){\n    //alert(this.get(\'fetchValue\'));\n    }\n      /*actions: {\n        gotoMaps: function(params) {\n    		this.transitionTo(\'maps\', params.lat);\n    		 }\n      }\n    */\n     \n    });\n\n\n    __exports__[\"default\"] = placesController;\n  });//# sourceURL=project/controllers/places.js");

;eval("define(\"project/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: ProjectENV.locationType\n    });\n\n    Router.map(function() {\n    	this.route(\'grid\');\n    	this.resource(\'places\', {path: \'/places/:statename\'});\n    	 this.resource(\'maps\', {path: \'/maps/:lat\'});\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=project/router.js");

;eval("define(\"project/routes/grid\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    var gridRoute = Ember.Route.extend({\r\n    \r\n      cachedCities: null,\r\n      \r\n      model: function() {\r\n        \r\n        // This is so that we don\'t refresh it all the time\r\n        // arguably, this is a hack.\r\n        var cachedCities = this.get(\'cachedCities\');\r\n        \r\n        if(cachedCities !== null) {\r\n          return cachedCities;\r\n        }\r\n    \r\n        var self = this;\r\n        return Ember.$.ajax({\r\n          url: \'http://172.16.65.131/explore/getstates.php\',\r\n        }).then(function(response) {\r\n          var cities = [];\r\n          if (response && response.length) {\r\n            for(var i=0; i<response.length; i++) {\r\n              cities.push(Ember.Object.create(response[i]));\r\n            }\r\n          }\r\n          self.set(\'cachedCities\', cities);\r\n          return cities;\r\n        });\r\n      },\r\n      \r\n      \r\n      setupController: function(controller, model) {\r\n        controller.set(\'content\', model);\r\n      }\r\n    });\r\n    \r\n    \r\n    __exports__[\"default\"] = gridRoute;\n  });//# sourceURL=project/routes/grid.js");

;eval("define(\"project/routes/places\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    var placesRoute = Ember.Route.extend({\r\n    fetchStateName: \'\',\r\n      model: function(params) {\r\n       this.set(\'fetchStateName\', params.statename);\r\n    \r\n        return Ember.$.ajax({\r\n          url: \'http://172.16.65.131/explore/getplaces.php?statename=\'+params.statename,\r\n    	  \r\n    	\r\n        }).then(function(response) {\r\n          var locs = [];\r\n          if (response && response.length) {\r\n            for(var i=0; i<response.length; i++) {\r\n              locs.push(Ember.Object.create(response[i]));\r\n            }\r\n          }\r\n          return locs;\r\n        });\r\n      },\r\n      \r\n      \r\n      setupController: function(controller, model) {\r\n        controller.set(\'content\', model);\r\n       // controller.set(\'fetchValue\', this.get(\'fetchStateName\'));\r\n    //alert(this.get(\'fetchStateName\'));\r\n      }\r\n    });\r\n    \r\n    \r\n    __exports__[\"default\"] = placesRoute;\n  });//# sourceURL=project/routes/places.js");

;eval("define(\"project/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"<div id=\\\"home\\\"> &#8962; </div>\");\n      }\n\n      data.buffer.push(\"<div class=\\\"header\\\">\\n	<h1>Explore</h1>\\n\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"grid\", options) : helperMissing.call(depth0, \"link-to\", \"grid\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" </div>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=project/templates/application.js");

;eval("define(\"project/templates/grid\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n<li>\\n<div class=\\\"greenBorder\\\"> \\n\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"places\", \"statename\", options) : helperMissing.call(depth0, \"link-to\", \"places\", \"statename\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n<h3>\");\n      stack1 = helpers._triageMustache.call(depth0, \"statename\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"<br>\");\n      stack1 = helpers._triageMustache.call(depth0, \"stateratings\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h3>\\n</div>\\n</li>\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n<img \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"stateimage\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" alt=\\\"stateimage\\\">\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"Grid\\\">\\n<div id=\\\"header\\\">\\n	<h1> Explore </h1>\\n</div>\\n<body>\\n<div class=\\\"background-image\\\"></div>\\n<div class= \\\"content\\\">\\n<ul class=\\\"rig columns-3\\\">\\n\");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n</div>\\n</body>\\n</div>\\n\\n\\n\\n\\n\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=project/templates/grid.js");

;eval("define(\"project/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Explore\");\n      }\n\n      data.buffer.push(\"<div id=\\\"index\\\">\\n<body>\\n<div id =\\\"ImageLaunchPage\\\">  \\n		 <img src=\\\"/assets/launch_images/travel.jpg\\\">\\n<div id =\\\"centreBody2\\\">\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"grid\", options) : helperMissing.call(depth0, \"link-to\", \"grid\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" </div>\\n</div>\\n\\n</div>\\n\\n</body>  \\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=project/templates/index.js");

;eval("define(\"project/templates/maps\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<div>\\n	<title>map</title>\\n		\\n<body>\\n</body>\\n</div>\");\n      \n    });\n  });//# sourceURL=project/templates/maps.js");

;eval("define(\"project/templates/places\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n<li>\\n\\n\\n<div class=\\\"greenBorder\\\">\\n<img \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"placeimage\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" alt=\\\"placeimage\\\">\\n\\n<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"placename\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n<p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"placedescription\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n</div>\\n</li>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"screen3\\\">\\n	<body>	\\n\\n\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'maps-canvas\'] || (depth0 && depth0[\'maps-canvas\']),options={hash:{\n        \'model\': (\"model\")\n      },hashTypes:{\'model\': \"ID\"},hashContexts:{\'model\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"maps-canvas\", options))));\n      data.buffer.push(\"\\n\\n<div class= \\\"content\\\">\\n<ul class=\\\"rig columns-2\\\">\");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n</div>\\n\\n\\n</body>\\n</div>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=project/templates/places.js");

;eval("define(\"project/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'project\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=project/tests/helpers/resolver.js");

;eval("define(\"project/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'project/app\')[\'default\'];\n    var Router = require(\'project/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=project/tests/helpers/start-app.js");

;eval("define(\"project/tests/project/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project\');\n    test(\'project/app.js should pass jshint\', function() { \n      ok(true, \'project/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/app.jshint.js");

;eval("define(\"project/tests/project/components/maps-canvas.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/components\');\n    test(\'project/components/maps-canvas.js should pass jshint\', function() { \n      ok(false, \'project/components/maps-canvas.js should pass jshint.\\nproject/components/maps-canvas.js: line 27, col 9, \\\'bounds\\\' is defined but never used.\\n\\n1 error\'); \n    });\n  });//# sourceURL=project/tests/project/components/maps-canvas.jshint.js");

;eval("define(\"project/tests/project/controllers/places.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/controllers\');\n    test(\'project/controllers/places.js should pass jshint\', function() { \n      ok(true, \'project/controllers/places.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/controllers/places.jshint.js");

;eval("define(\"project/tests/project/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project\');\n    test(\'project/router.js should pass jshint\', function() { \n      ok(true, \'project/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/router.jshint.js");

;eval("define(\"project/tests/project/routes/grid.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/routes\');\n    test(\'project/routes/grid.js should pass jshint\', function() { \n      ok(true, \'project/routes/grid.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/routes/grid.jshint.js");

;eval("define(\"project/tests/project/routes/places.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/routes\');\n    test(\'project/routes/places.js should pass jshint\', function() { \n      ok(true, \'project/routes/places.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/routes/places.jshint.js");

;eval("define(\"project/tests/project/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/tests/helpers\');\n    test(\'project/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'project/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/tests/helpers/resolver.jshint.js");

;eval("define(\"project/tests/project/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/tests/helpers\');\n    test(\'project/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'project/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/tests/helpers/start-app.jshint.js");

;eval("define(\"project/tests/project/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/tests\');\n    test(\'project/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'project/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/tests/test-helper.jshint.js");

;eval("define(\"project/tests/project/views/map.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/views\');\n    test(\'project/views/map.js should pass jshint\', function() { \n      ok(true, \'project/views/map.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/views/map.jshint.js");

;eval("define(\"project/tests/project/views/sample.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - project/views\');\n    test(\'project/views/sample.js should pass jshint\', function() { \n      ok(true, \'project/views/sample.js should pass jshint.\'); \n    });\n  });//# sourceURL=project/tests/project/views/sample.jshint.js");

;eval("define(\"project/tests/test-helper\", \n  [\"project/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=project/tests/test-helper.js");

;eval("define(\"project/views/map\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    /*global google */\n    var maps = Ember.ContainerView.extend({\n\n      id: \'map-canvas\',\n      tagName: \'div\',\n\n      attributeBindings: [\'style\'],\n      style:\"height: 600px;\",\n      \n      map:null,\n\n      didInsertElement: function() {\n        var mapOptions = {\n          center: new google.maps.LatLng(36.054099, -112.143160),\n          zoom: 13,\n          mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n        var map = new google.maps.Map(this.$().get(0),mapOptions);\n        this.set(\"map\",map);\n      }\n    });\n\n\n    __exports__[\"default\"] = maps;\n  });//# sourceURL=project/views/map.js");

;eval("define(\"project/views/sample\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    \r\n    var view = Ember.View.create({\r\n      templateName: \'places\',\r\n      name: \"Bob\"\r\n    });\r\n    \r\n    __exports__[\"default\"] = view;\n  });//# sourceURL=project/views/sample.js");
